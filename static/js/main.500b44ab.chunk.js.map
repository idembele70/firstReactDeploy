{"version":3,"sources":["logo.svg","values/theme.js","components/AddTodo.jsx","components/Title.jsx","components/TodoRow.jsx","services/todo.service.js","pages/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","main","textPrimary","black","secondary","AddTodo","onAddTodo","msgRef","useRef","useState","error","setError","Grid","item","xs","sm","Box","boxShadow","p","autoComplete","TextField","id","label","fullWidth","variant","inputRef","helperText","m","ThemeProvider","container","justifyContent","Button","type","color","onClick","e","preventDefault","current","value","Title","bgcolor","Typography","align","TodoRow","message","editable","done","onDelete","onEditTodo","onDone","newMessage","initialValue","isDone","setDone","useToggleDone","onToggleDone","handleEdit","target","parentElement","isSmallDisplay","useMediaQuery","breakpoints","down","width","alignItems","FormControlLabel","name","checked","control","Checkbox","icon","checkedIcon","onSubmit","defaultValue","style","textDecoration","cursor","addToLocalStorage","data","map","todo","idx","localStorage","setItem","JSON","stringify","TodoList","parse","getItem","setData","useEffect","deleteOneTodo","todoId","newData","forEach","push","editOneTodo","newValue","find","t","doneOneTodo","spacing","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.500b44ab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createTheme } from \"@material-ui/core\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#6112B0\",\n    },\n    textPrimary: {\n      main: \"#ffff\",\n    },\n    black: {\n      main: \"#0000\",\n    },\n    secondary: {\n      main: \"#430c81\",\n    },\n  },\n});\nexport default theme;\n","import { Box, Button, Grid, TextField, ThemeProvider } from \"@material-ui/core\"\nimport React, { useRef, useState } from \"react\"\nimport theme from \"../values/theme.js\"\nexport default function AddTodo({ onAddTodo }) {\n  const msgRef = useRef(null)\n  const [error, setError] = useState(false)\n  const handleAddTodo = (e) => {\n    e.preventDefault()\n    if(!msgRef.current.value) \n    return setError(true)\n    if(error) setError(false)\n    onAddTodo(msgRef.current.value)\n    msgRef.current.value = null\n  }\n\n  return <Grid item xs={11} sm={6}>\n    <Box boxShadow={2} p={4}>\n      <form autoComplete=\"off\">\n        <TextField id={\"standard-\"+(error ?\"error\" : \"basic\")} error={error} label=\"Add new todo\" fullWidth variant=\"outlined\" inputRef={msgRef} helperText={error ? \"this input value cannot be null\" : \"\"} />\n        <Box m=\"8px 0\" >\n          <ThemeProvider theme={theme}>\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleAddTodo} >ADD</Button>\n              </Grid>\n            </Grid>\n          </ThemeProvider>\n        </Box>\n      </form>\n    </Box>\n  </Grid>\n}","import React from \"react\"\nimport { Box, Grid, Typography, makeStyles, ThemeProvider } from '@material-ui/core';\nimport theme from \"../values/theme\";\n\nfunction Title() {\n  return <Grid item xs={12} >\n    <Box p={1} bgcolor={theme.palette.primary.main} >\n      <ThemeProvider theme={theme}>\n        <Typography variant=\"h6\" align=\"center\" color=\"textPrimary\">TODO APP</Typography>\n      </ThemeProvider>\n    </Box>\n  </Grid>\n}\n\nexport default Title;","import { Box, Checkbox, FormControlLabel, Grid, ThemeProvider, TextField, Typography,useMediaQuery } from \"@material-ui/core\";\nimport CheckCircleOutlinedIcon from '@material-ui/icons/CheckCircleOutlined';\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\nimport CreateRoundedIcon from '@material-ui/icons/CreateRounded';\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport React, { useRef, useState } from \"react\";\nimport theme from \"../values/theme\";\n\nfunction useToggleDone(initialValue) {\n  const [isDone, setDone] = useState(initialValue)\n  const onToggleDone = () => setDone(!isDone)\n  return [isDone, onToggleDone]\n}\n\nexport default function TodoRow({ message, id, editable, done, onDelete, onEditTodo, onDone }) {\n  const newMessage = useRef(message);\n  const [isDone, onToggleDone] = useToggleDone(done)\n  const handleDelete = (e) => {\n    const { id, parentElement } = e.target\n    if (id)\n      return onDelete(id);\n    return onDelete(parentElement.id);\n  }\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    const { id, parentElement } = e.target;\n    if (id) return onEditTodo(id, newMessage.current ? newMessage.current.value : \"\");\n    return onEditTodo(parentElement.id, newMessage.current ? newMessage.current.value : \"\");\n  }\n\n  const handleDone = (e) => {\n    const { name } = e.target;\n    onToggleDone()\n    if (name) return onDone(name)\n  }\nconst isSmallDisplay = useMediaQuery(theme.breakpoints.down('xs'))\n  return <Box width={\"80vw\"}>\n    <Grid container alignItems=\"center\">\n      <Grid item xs={1}>\n        <Grid container justifyContent=\"center\">\n          <ThemeProvider theme={theme} >\n            <FormControlLabel onClick={handleDone} checked={isDone}\n              control={<Checkbox icon={<CheckCircleOutlinedIcon color=\"primary\" />} checkedIcon={<CheckCircleRoundedIcon color=\"primary\" />} name={id + \" \"} />}\n            />\n          </ThemeProvider>\n        </Grid>\n      </Grid>\n      <Grid item xs={isSmallDisplay ? 7 : 9}>\n        {editable ? <form id={id + \"\"} onSubmit={handleEdit} autoComplete=\"off\">\n          <TextField id={id + \"\"} label=\"Update your todo\" defaultValue={message} inputRef={newMessage} variant=\"filled\" />\n        </form>\n          :\n          <Typography variant=\"body1\" style={{ textDecoration: done ? \"line-through\" : \"none\" }}>{message}</Typography>\n        }\n      </Grid>\n      <Grid item xs={isSmallDisplay ? 3 : 1}>\n        <Grid container justifyContent=\"space-around\">\n          <Grid item>\n            <DeleteRoundedIcon id={id + \"\"} style={{ cursor: \"pointer\" }} onClick={handleDelete} />\n          </Grid>\n          <Grid item>\n            {\n              editable ?\n                <CheckCircleIcon id={id + \"\"} style={{ cursor: \"pointer\" }} onClick={handleEdit} />\n                : <CreateRoundedIcon id={id + \"\"} style={{ cursor: \"pointer\" }} onClick={handleEdit} />\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  </Box>\n}","export function addToLocalStorage(data) {\n  data.map((todo, idx) => (todo.id = idx));\n  return localStorage.setItem(\"TodoReactMUI\", JSON.stringify(data));\n}\n\nexport function getLocalStorage() {\n  return JSON.parse(localStorage.getItem(\"TodoReactMUI\"));\n}\n","import { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from \"react\";\nimport AddTodo from \"../components/AddTodo\";\nimport Title from \"../components/Title\";\nimport TodoRow from \"../components/TodoRow\";\nimport { addToLocalStorage, getLocalStorage } from \"../services/todo.service\";\n\nexport default function TodoList() {\n  const [data, setData] = useState(getLocalStorage()||[])\n\n  useEffect(\n    () => \"\", [data]\n  )\n\n  const addData = (message) => {\n    const newData = [...data, { message, id: data.length, editable: false, done: false }]\n    setData(newData)\n    addToLocalStorage(newData)\n  }\n\n  const deleteOneTodo = (todoId) => {\n    const newData = []\n    data.forEach(\n      todo => todo.id != todoId ? newData.push(todo) : null\n    )\n    setData(newData)\n    addToLocalStorage(newData)\n  }\n  const editOneTodo = (todoId, newValue) => {\n    const todo = data.find(todo => todo.id == todoId)\n    todo.editable = !todo.editable;\n    const newData = [];\n    if (todo.editable) {\n      data.forEach(t => t.id != todoId ? newData.push(t) : newData.push(todo))\n    } else {\n      if (newValue)\n        todo.message = newValue;\n      data.forEach(t => t.id != todoId ? newData.push(t) : newData.push(todo))\n    }\n    addToLocalStorage(newData)\n    setData(newData)\n  }\n\n  const doneOneTodo = (todoId) => {\n    const todo = data.find(t => t.id == todoId)\n    todo.done = !todo.done\n    const newData = [];\n    data.forEach(t => t.id == todoId ? newData.push(todo) : newData.push(t))\n    addToLocalStorage(newData);\n    setData(newData);\n  }\n  return <Grid container justifyContent=\"center\" spacing={2}>\n    <Title />\n    <AddTodo onAddTodo={addData} />\n    {data.length ? data.map(\n      ({ message, id, editable, done }) => <TodoRow key={id}\n        message={message} id={id}\n        editable={editable} done={done}\n        onDelete={deleteOneTodo} onEditTodo={editOneTodo}\n        onDone={doneOneTodo} />\n    ) : \"\"}\n  </Grid>\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport TodoList from './pages/TodoList';\n\nfunction App() {\n  return (\n  <TodoList />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}